{"version":3,"sources":["webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_createRange.js","webpack:///./src/components/NumberLineGame.tsx","webpack:///./src/util/numberLine/questions.ts","webpack:///./src/pages/numberLine.tsx","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_baseRange.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/range.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///(webpack)/buildin/global.js"],"names":["baseGetTag","isObjectLike","module","exports","value","Symbol","objectProto","Object","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","isOwn","call","tag","unmasked","e","result","type","baseRange","isIterateeCall","toFinite","fromRight","start","end","step","NumberLineGame","question","guesses","currentlyGuessing","results","className","amountOfNumbers","countIn","map","number","index","blankIndex","blanks","indexOf","isBlank","key","generateQuestion","countInOptions","numberOfBlanks","randomInt","length","diceRoll","includes","push","sort","a","b","Phase","LEVELS","NumberLine","useState","WaitingToStart","phase","setPhase","level","setLevel","setResults","currentQuestion","setCurrentQuestion","setCurrentlyGuessing","currentGuesses","setCurrentGuesses","currentRoundResults","setCurrentRoundResults","showingFeedback","setShowingFeedback","timeout","useRef","reset","current","clearTimeout","setQuestion","Array","fill","processGuess","roundResults","expected","forEach","expectedAnswerForQuestion","reduce","acc","cur","idx","questionsAnswered","every","setTimeout","Results","useEffect","Header","title","backPressed","navigate","InProgress","LevelSelector","onPress","selectedLevel","Keypad","keypadDisabled","deleteDisabled","enterDisabled","onKeyPress","currentGuess","slice","outOf","onPlayAgainPressed","freeGlobal","freeSelf","self","root","Function","isFunction","isLength","getRawTag","objectToString","nativeCeil","Math","ceil","nativeMax","max","global","range","createRange","toNumber","isObject","other","eq","isArrayLike","isIndex","object","isSymbol","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","replace","isBinary","test","reIsUint","g","this","window"],"mappings":"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","file":"component---src-pages-number-line-tsx-6b1de2b97175c93e49e7.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n","import { Question } from '@/util/numberLine/questions';\nimport { range } from 'lodash';\nimport React from 'react';\n\nexport default function NumberLineGame({\n  question,\n  guesses,\n  currentlyGuessing,\n  results,\n}: {\n  question: Question;\n  guesses: string[];\n  currentlyGuessing: number;\n  results?: boolean[];\n}): JSX.Element {\n  return (\n    <div className=\"number-line-container\">\n      {range(\n        0,\n        question.amountOfNumbers * question.countIn,\n        question.countIn,\n      ).map((number, index) => {\n        const blankIndex = question.blanks.indexOf(index);\n        const isBlank = blankIndex > -1;\n\n        const value = isBlank ? guesses[blankIndex] : `${number}`;\n\n        return (\n          <div\n            key={number}\n            className={`number-line-box ${isBlank ? 'blank' : ''} ${\n              currentlyGuessing === blankIndex && results === undefined\n                ? 'current'\n                : ''\n            } ${\n              isBlank && results !== undefined\n                ? results[blankIndex]\n                  ? 'correct'\n                  : 'incorrect'\n                : ''\n            }`}\n          >\n            {value}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { range } from 'lodash';\nimport { randomInt } from '../random';\n\nexport interface Question {\n  amountOfNumbers: number;\n  countIn: number;\n  blanks: number[];\n}\n\nexport function expectedAnswerForQuestion(question: Question): string[] {\n  const expected: string[] = [];\n\n  range(\n    0,\n    question.amountOfNumbers * question.countIn,\n    question.countIn,\n  ).forEach((number, index) => {\n    if (question.blanks.includes(index)) {\n      expected.push(`${number}`);\n    }\n  });\n\n  return expected;\n}\n\nexport function generateQuestion(\n  amountOfNumbers: number,\n  countInOptions: number[],\n  numberOfBlanks: number,\n): Question {\n  const countIn = countInOptions[randomInt(0, countInOptions.length)];\n\n  const blanks: number[] = [];\n  while (blanks.length < numberOfBlanks) {\n    const diceRoll = randomInt(0, amountOfNumbers);\n    if (!blanks.includes(diceRoll)) {\n      blanks.push(diceRoll);\n    }\n  }\n\n  return {\n    amountOfNumbers,\n    countIn,\n    blanks: blanks.sort((a, b) => a - b),\n  };\n}\n","import Header from '@/components/Header';\nimport Keypad from '@/components/keypad/Keypad';\nimport LevelSelector from '@/components/LevelSelector';\nimport NumberLineGame from '@/components/NumberLineGame';\nimport Results from '@/components/Results';\nimport {\n  expectedAnswerForQuestion,\n  generateQuestion,\n  Question,\n} from '@/util/numberLine/questions';\nimport { navigate } from 'gatsby';\nimport React, { useEffect, useRef, useState } from 'react';\n\nenum Phase {\n  WaitingToStart,\n  InProgress,\n  Results,\n}\n\ninterface Level {\n  amountOfNumbers: number;\n  countInOptions: number[];\n  numberOfBlanks: number;\n}\n\nconst QUESTIONS_PER_ROUND = 10;\nconst RESULT_FEEDBACK_MS = 2000;\nconst MAX_ANSWER_DIGITS = 2;\n\nconst LEVELS: Level[] = [\n  {\n    amountOfNumbers: 11,\n    countInOptions: [1],\n    numberOfBlanks: 3,\n  },\n  {\n    amountOfNumbers: 20,\n    countInOptions: [1],\n    numberOfBlanks: 5,\n  },\n  {\n    amountOfNumbers: 20,\n    countInOptions: [1, 2, 5],\n    numberOfBlanks: 5,\n  },\n];\n\nexport default function NumberLine(): JSX.Element {\n  const [phase, setPhase] = useState(Phase.WaitingToStart);\n  const [level, setLevel] = useState<0 | 1 | 2>(2);\n  const [results, setResults] = useState<boolean[]>([]);\n  const [currentQuestion, setCurrentQuestion] = useState<Question | undefined>(\n    undefined,\n  );\n  const [currentlyGuessing, setCurrentlyGuessing] = useState(0);\n  const [currentGuesses, setCurrentGuesses] = useState<string[]>([]);\n  const [currentRoundResults, setCurrentRoundResults] = useState<\n    boolean[] | undefined\n  >(undefined);\n  const [showingFeedback, setShowingFeedback] = useState(false);\n\n  const timeout = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    return () => {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n\n  function reset() {\n    setPhase(Phase.WaitingToStart);\n    setLevel(0);\n    setResults([]);\n    setCurrentQuestion(undefined);\n    setCurrentRoundResults(undefined);\n    setCurrentlyGuessing(0);\n    setCurrentGuesses([]);\n    setShowingFeedback(false);\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n    }\n  }\n\n  function setQuestion(question: Question) {\n    setCurrentQuestion(question);\n    setCurrentGuesses(new Array(question.blanks.length).fill(''));\n    setCurrentlyGuessing(0);\n  }\n\n  function processGuess() {\n    const expected = expectedAnswerForQuestion(currentQuestion);\n    const roundResults = expected.reduce((acc, cur, idx) => {\n      acc.push(cur === currentGuesses[idx]);\n      return acc;\n    }, [] as boolean[]);\n\n    const questionsAnswered = results.length + 1;\n\n    setResults([...results, roundResults.every((value) => value === true)]);\n    setShowingFeedback(true);\n    setCurrentRoundResults(roundResults);\n\n    timeout.current = setTimeout(() => {\n      timeout.current = undefined;\n\n      if (questionsAnswered < QUESTIONS_PER_ROUND) {\n        setCurrentRoundResults(undefined);\n        setQuestion(\n          generateQuestion(\n            LEVELS[level].amountOfNumbers,\n            LEVELS[level].countInOptions,\n            LEVELS[level].numberOfBlanks,\n          ),\n        );\n      } else {\n        setPhase(Phase.Results);\n      }\n\n      setShowingFeedback(false);\n    }, RESULT_FEEDBACK_MS);\n  }\n\n  return (\n    <main>\n      <Header\n        title=\"Number Line\"\n        backPressed={() => {\n          switch (phase) {\n            case Phase.WaitingToStart:\n              navigate('/');\n              break;\n            case Phase.InProgress:\n            case Phase.Results:\n              reset();\n              break;\n          }\n        }}\n      />\n\n      {phase === Phase.WaitingToStart && (\n        <LevelSelector\n          onPress={(selectedLevel) => {\n            setLevel(selectedLevel);\n            setQuestion(\n              generateQuestion(\n                LEVELS[selectedLevel].amountOfNumbers,\n                LEVELS[selectedLevel].countInOptions,\n                LEVELS[selectedLevel].numberOfBlanks,\n              ),\n            );\n            setPhase(Phase.InProgress);\n          }}\n        />\n      )}\n\n      {phase === Phase.InProgress && currentQuestion && (\n        <>\n          <NumberLineGame\n            question={currentQuestion}\n            currentlyGuessing={currentlyGuessing}\n            guesses={currentGuesses}\n            results={currentRoundResults}\n          />\n\n          <Keypad\n            keypadDisabled={showingFeedback}\n            deleteDisabled={\n              currentlyGuessing === 0 &&\n              currentGuesses[currentlyGuessing].length === 0\n            }\n            enterDisabled={false}\n            onKeyPress={(key) => {\n              const currentGuess = currentGuesses[currentlyGuessing];\n\n              switch (key.type) {\n                case 'number': {\n                  if (\n                    currentGuess.length < MAX_ANSWER_DIGITS &&\n                    currentGuess !== '0'\n                  ) {\n                    setCurrentGuesses([\n                      ...currentGuesses.slice(0, currentlyGuessing),\n                      `${currentGuess}${key.number}`,\n                      ...currentGuesses.slice(currentlyGuessing + 1),\n                    ]);\n                  }\n                  break;\n                }\n                case 'delete': {\n                  if (currentGuess.length > 0) {\n                    setCurrentGuesses([\n                      ...currentGuesses.slice(0, currentlyGuessing),\n                      currentGuess.slice(0, currentGuess.length - 1),\n                      ...currentGuesses.slice(currentlyGuessing + 1),\n                    ]);\n                  } else if (currentlyGuessing > 0) {\n                    setCurrentlyGuessing(currentlyGuessing - 1);\n                  }\n\n                  break;\n                }\n                case 'enter': {\n                  if (currentlyGuessing < currentQuestion.blanks.length - 1) {\n                    setCurrentlyGuessing(currentlyGuessing + 1);\n                  } else {\n                    processGuess();\n                  }\n\n                  break;\n                }\n                default:\n                  break;\n              }\n            }}\n          />\n        </>\n      )}\n\n      {phase === Phase.Results && (\n        <Results\n          results={results}\n          outOf={QUESTIONS_PER_ROUND}\n          onPlayAgainPressed={reset}\n        />\n      )}\n    </main>\n  );\n}\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}